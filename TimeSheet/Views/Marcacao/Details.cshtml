@model TimeSheet.ViewModel.ViewModelMacacao

@{
    ViewData["Title"] = "Marcações Diárias";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
            <div class="card azulc-azule">
                <div class="card-header">
                    @ViewBag.Title
                </div>
                <div class="card-body">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-xs-6 col-sm-2">
                            <label for="Matricula">Mátrícula</label>
                            @Html.EditorFor(model => model.MatUsuario, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control col-md-8", @placeholder = "Matrícula" } })
                            <span asp-validation-for="MatUsuario" class="text-danger"></span>
                        </div>
                        <div class="col-xs-6 col-sm-4">
                            <label for="NomeUser">Nome</label>
                            @Html.EditorFor(model => model.NomeUsuario, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control col-md-18", @placeholder = "Nome" } })
                            <span asp-validation-for="NomeUsuario" class="text-danger"></span>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-xs-6 col-sm-2">
                            <label for="NomeGerencia">
                                Coordenação
                            </label>
                            @Html.EditorFor(model => model.Coordenacao, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control col-md-8", @placeholder = "Coordenação" } })
                            <span asp-validation-for="Coordenacao" class="text-danger"></span>
                        </div>
                        <div class="col-xs-6 col-sm-2">
                            <label for="DataDia">
                                Data da marcação
                            </label>
                            @Html.EditorFor(model => model.DataDia, new { htmlAttributes = new { @id = "DateSelect", @class = "form-control", @type = "date" } })
                            <span asp-validation-for="DataDia" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <br/>
    <div class="card azulc-azule">
        <div class="card-header">
            Lançamento de Marcações &nbsp  &nbsp @Model.AnoMesDescricao
        </div>
        <div class="card-body">
            <table id="tbLancamento" class="table table-striped table-bordered table-hover responsive nowrap" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>Data Lançamento</th>
                        <th>Ações</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        foreach (var item in Model.Lancamentolist.OrderBy(c => c.DateLancamento))
                        {
                            <tr>
                                <td>@item.DateLancamento.ToDateProtheusReverseformate()</td>
                                <td><button type="button" class="btn btn-sm btn-visualizar" name="visualizar" onclick="Detalhe('@item.DateLancamento')"> <i class="fas fa-eye"></i></button> </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div id="myModal" class="modal fade" role="dialog">
    </div> <br />

    <div class="card azulc-azule">
        <div class="card-header">
            Lista de Lançamentos
        </div>
        <div class="card-body">
            <table id="tbLancamentoDetalhe" class="table table-striped table-bordered table-hover responsive nowrap" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th>Hora Início</th>
                        <th>Hora Fim</th>
                        <th>Projeto</th>
                        <th>Observação</th>
                        <th>Código Divergência</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>

    <div class="modal-body" id="modal-body"></div>
    <div class="btn-ft">
        <input type="checkbox" href="#" class="btn-ft-open" name="btn-ft-open" id="btn-ft-open" />
        <label class="btn-ft-item-open" for="btn-ft-open">
            <span><i class="fas fa-plus"></i></span>
        </label>
        <button style="display:none" type="button" id="salvarEdicao" class="btn-ft-item" tooltip="Salvar Edição"><i class="fas fa-save"></i></button>
        <a href="@Url.Action("Index", "Marcacao")" class="btn-ft-item" tooltip="Voltar"><i class="fas fa-arrow-left"></i></a>
    </div>
}
<script type="text/javascript">


    function Detalhe(data) {
        $.ajax({
            url: '@Url.Action("GetMarcacoesProthues", "Marcacao")',
            changeMonth: true,
            changeYear: true,
            dataType: 'json',
            type: 'get',
            data: { data: data, matricula: $("#MatUsuario").val()},
            success: function (data) {
                $('#tbLancamentoDetalhe tbody tr').remove();
                for (var i = 0; data.length > i; i++) {
                    if (!(data[i].observacao === null)) {
                        data[i].observacao = data[i].observacao.substring(0, 20);
                    } else {
                        data[i].observacao = ' ';
                    }
                    $('#tbLancamentoDetalhe tbody').append('<tr><td>' + data[i].horaInicio + '</td>' +
                        '<td>' + data[i].horaFim + '</td>' +
                        '<td>' + data[i].descricaoEmp + ' - Fase - ' + data[i].fase + '</td>' +
                        '<td>' + data[i].observacao + '...' + '</td>' +
                        '<td>' + data[i].codDivergencia + '</td>' +
                        '</tr>');
                }
            }
        });
    }

    $('#tbLancamento').DataTable({
        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
        "columnDefs": [
            { className: "text-left", "targets": [0, 1] },
            { "orderable": false, "targets": [2] }
        ],
        "language": {
            "decimal": "",
            "emptyTable": "Nenhum registro disponível na tabela",
            "info": "Visualizando _START_ de _END_ de _TOTAL_ registros",
            "infoEmpty": "Visualizando 0 de 0 de 0 registros",
            "infoFiltered": "(filtered from _MAX_ total entries)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Mostrar _MENU_ registros",
            "loadingRecords": "Carregando...",
            "processing": "Processando...",
            "search": "Pesquisar:",
            "zeroRecords": "Nenhum registro correspondente encontrado",
            "paginate": {
                "first": "Primeira",
                "last": "Última",
                "next": "Próxima",
                "previous": "Anterior"
            }
        },
</script>